{"ast":null,"code":"import _toConsumableArray from\"/Users/liridonolluri/Downloads/notebookapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/liridonolluri/Downloads/notebookapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import uuid from\"react-uuid\";import\"./App.css\";import Note from\"./inputNote/inputNote\";import Sidebar from\"./sidebar/sidebar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(localStorage.notes?JSON.parse(localStorage.notes):[]),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),activeNote=_useState4[0],setActiveNote=_useState4[1];useEffect(function(){localStorage.setItem(\"notes\",JSON.stringify(notes));},[notes]);var onAddNote=function onAddNote(){var newNote={id:uuid(),title:\"Untitled Note\",category:\"\",body:\"\",lastModified:Date.now()};setNotes([newNote].concat(_toConsumableArray(notes)));setActiveNote(newNote.id);};var onDeleteNote=function onDeleteNote(noteId){setNotes(notes.filter(function(_ref){var id=_ref.id;return id!==noteId;}));};//   const searchFilter =(searchNote) =>{\n//     const updatedNotesBySearch = notes.map((note) => {\n//  console.log(\"test123\")\n//     var input, filter, table, tr, td, i, txtValue;\n//         input = document.getElementById(\"search-form\");\n//         filter = input.value.toUpperCase();\n//         table = document.getElementById(\"myTable\");\n//         tr = table.getElementsByTagName(\"strong\");\n//         for (i = 0; i < tr.length; i++) {\n//          console.log(tr)\n//           if (tr) {\n//             console.log(\"tr-ja \", tr);\n//             txtValue = input.value;\n//             console.log(\"TXT VALUE -  :\" + txtValue);\n//             if ( txtValue.toUpperCase().indexOf(filter) > -1) {\n//               // txtValue.toUpperCase().indexOf(filter) > -1\n//               // $(this).find(‘.screen_name’).text().toLowerCase().indexOf(value) > -1\n//               console.log(\"mrena kushtit\");\n//               // var v = document.getElementById(\"myTable\");\n//               // v.className += \" test\";\n//               // var r = document.getElementById(\"myTable\");\n//               // r.className +=  \" testRemove\";\n//             } else {\n//               // tr[i].style.display = \"none\";\n//               var v = document.getElementById(\"myTable\");\n//               v.className += \" test1\";\n//               // var r = document.getElementById(\"myTable\");\n//               // r.className +=  \" testRemove2\";\n//             }\n//             // console.log(\"ALL NOTE\" , note);\n//             return note;\n//           }       \n//   } \n//     });setNotes(updatedNotesBySearch);\n//     // notes.filter(note =>{\n//     //   return note.title.includes(searchNote);\n//     // });\n//   }\nvar onUpdateNote=function onUpdateNote(updatedNote){var updatedNotesArr=notes.map(function(note){if(note.id===updatedNote.id){return updatedNote;}return note;});setNotes(updatedNotesArr);};var getActiveNote=function getActiveNote(){return notes.find(function(_ref2){var id=_ref2.id;return id===activeNote;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Sidebar,{notes:notes,onAddNote:onAddNote,onDeleteNote:onDeleteNote,activeNote:activeNote,setActiveNote:setActiveNote// searchFilter={searchFilter}\n}),/*#__PURE__*/_jsx(Note,{activeNote:getActiveNote(),onUpdateNote:onUpdateNote})]});}export default App;","map":{"version":3,"sources":["/Users/liridonolluri/Downloads/notebookapp/src/App.js"],"names":["useEffect","useState","uuid","Note","Sidebar","App","localStorage","notes","JSON","parse","setNotes","activeNote","setActiveNote","setItem","stringify","onAddNote","newNote","id","title","category","body","lastModified","Date","now","onDeleteNote","noteId","filter","onUpdateNote","updatedNote","updatedNotesArr","map","note","getActiveNote","find"],"mappings":"wQAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0BJ,QAAQ,CAChCK,YAAY,CAACC,KAAb,CAAqBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,KAAxB,CAArB,CAAsD,EADtB,CAAlC,wCAAOA,KAAP,eAAcG,QAAd,eAGA,eAAoCT,QAAQ,CAAC,KAAD,CAA5C,yCAAOU,UAAP,eAAmBC,aAAnB,eAEAZ,SAAS,CAAC,UAAM,CACdM,YAAY,CAACO,OAAb,CAAqB,OAArB,CAA8BL,IAAI,CAACM,SAAL,CAAeP,KAAf,CAA9B,EACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,GAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEf,IAAI,EADM,CAEdgB,KAAK,CAAE,eAFO,CAGdC,QAAQ,CAAC,EAHK,CAIdC,IAAI,CAAE,EAJQ,CAKdC,YAAY,CAAEC,IAAI,CAACC,GAAL,EALA,CAAhB,CASAb,QAAQ,EAAEM,OAAF,4BAAcT,KAAd,GAAR,CACAK,aAAa,CAACI,OAAO,CAACC,EAAT,CAAb,CACD,CAZD,CAcA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAY,CAC/Bf,QAAQ,CAACH,KAAK,CAACmB,MAAN,CAAa,kBAAGT,CAAAA,EAAH,MAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKQ,MAAnB,EAAb,CAAD,CAAR,CACD,CAFD,CAMF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAGE,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,WAAD,CAAiB,CAEpC,GAAMC,CAAAA,eAAe,CAAGtB,KAAK,CAACuB,GAAN,CAAU,SAACC,IAAD,CAAU,CAG1C,GAAIA,IAAI,CAACd,EAAL,GAAYW,WAAW,CAACX,EAA5B,CAAgC,CAC9B,MAAOW,CAAAA,WAAP,CACD,CAED,MAAOG,CAAAA,IAAP,CACD,CARuB,CAAxB,CAUArB,QAAQ,CAACmB,eAAD,CAAR,CACD,CAbD,CAeA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,MAAOzB,CAAAA,KAAK,CAAC0B,IAAN,CAAW,mBAAGhB,CAAAA,EAAH,OAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKN,UAAnB,EAAX,CAAP,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,OAAD,EACE,KAAK,CAAEJ,KADT,CAEE,SAAS,CAAEQ,SAFb,CAGE,YAAY,CAAES,YAHhB,CAIE,UAAU,CAAEb,UAJd,CAKE,aAAa,CAAEC,aACf;AANF,EADF,cAYE,KAAC,IAAD,EAAM,UAAU,CAAEoB,aAAa,EAA/B,CAAmC,YAAY,CAAEL,YAAjD,EAZF,GADF,CAgBD,CAED,cAAetB,CAAAA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./App.css\";\nimport Note from \"./inputNote/inputNote\";\nimport Sidebar from \"./sidebar/sidebar\";\n\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\", \n      category:\"\",\n      body: \"\",\n      lastModified: Date.now(),\n     \n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    setNotes(notes.filter(({ id }) => id !== noteId));\n  };\n\n\n\n//   const searchFilter =(searchNote) =>{\n\n//     const updatedNotesBySearch = notes.map((note) => {\n//  console.log(\"test123\")\n//     var input, filter, table, tr, td, i, txtValue;\n//         input = document.getElementById(\"search-form\");\n//         filter = input.value.toUpperCase();\n//         table = document.getElementById(\"myTable\");\n//         tr = table.getElementsByTagName(\"strong\");\n//         for (i = 0; i < tr.length; i++) {\n//          console.log(tr)\n//           if (tr) {\n//             console.log(\"tr-ja \", tr);\n//             txtValue = input.value;\n//             console.log(\"TXT VALUE -  :\" + txtValue);\n//             if ( txtValue.toUpperCase().indexOf(filter) > -1) {\n              \n//               // txtValue.toUpperCase().indexOf(filter) > -1\n//               // $(this).find(‘.screen_name’).text().toLowerCase().indexOf(value) > -1\n//               console.log(\"mrena kushtit\");\n//               // var v = document.getElementById(\"myTable\");\n//               // v.className += \" test\";\n//               // var r = document.getElementById(\"myTable\");\n//               // r.className +=  \" testRemove\";\n             \n             \n              \n              \n//             } else {\n//               // tr[i].style.display = \"none\";\n//               var v = document.getElementById(\"myTable\");\n//               v.className += \" test1\";\n//               // var r = document.getElementById(\"myTable\");\n//               // r.className +=  \" testRemove2\";\n//             }\n//             // console.log(\"ALL NOTE\" , note);\n//             return note;\n            \n//           }       \n//   } \n\n//     });setNotes(updatedNotesBySearch);\n   \n\n//     // notes.filter(note =>{\n//     //   return note.title.includes(searchNote);\n//     // });\n//   }\n \n\n  const onUpdateNote = (updatedNote) => {\n\n    const updatedNotesArr = notes.map((note) => {\n      \n\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(({ id }) => id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n        // searchFilter={searchFilter}\n      \n        \n\n      />\n      <Note activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}