{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liridon\\\\Desktop\\\\notebookapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./App.css\";\nimport Note from \"./inputNote/inputNote\";\nimport Sidebar from \"./sidebar/sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState(localStorage.notes ? JSON.parse(localStorage.notes) : []);\n  const [activeNote, setActiveNote] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      category: \"\",\n      body: \"\",\n      lastModified: Date.now()\n    };\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = noteId => {\n    setNotes(notes.filter(_ref => {\n      let {\n        id\n      } = _ref;\n      return id !== noteId;\n    }));\n  };\n\n  const searchFilter = searchNote => {\n    const updatedNotesBySearch = notes.map(note => {\n      console.log(\"test123\");\n      var input, filter, ul, li, a, i, txtValue;\n      input = document.getElementById('search-form');\n      filter = input.value.toUpperCase();\n      ul = document.getElementById(\"myTable\");\n      li = ul.getElementsByTagName('strong'); // Loop through all list items, and hide those who don't match the search query\n\n      for (i = 0; i < li.length; i++) {\n        a = li[i].getElementsByTagName(\"a\")[0];\n        txtValue = a;\n\n        if (txtValue === a) {\n          li[i].style.display = \"\";\n        } else {\n          li[i].style.display = \"none\";\n        }\n      } //   var input, filter, table, tr, td, i, txtValue;\n      //       input = document.getElementById(\"search-form\");\n      //       filter = input.value.toUpperCase();\n      //       table = document.getElementById(\"myTable\");\n      //       tr = table.getElementsByTagName(\"strong\");\n      //       for (i = 0; i < tr.length; i++) {\n      //        console.log(tr)\n      //         if (tr) {\n      //           // input#search-form.search-input\n      //           txtValue = input.value;\n      //           console.log(\"mrena ifit\")\n      //           console.log(\"TXT VALUE -  :\" + txtValue);\n      //           if ( txtValue.toUpperCase().indexOf(filter) > -1) {\n      //             // txtValue.toUpperCase().indexOf(filter) > -1\n      //             // $(this).find(‘.screen_name’).text().toLowerCase().indexOf(value) > -1\n      //             console.log(\"mrena kushtit\");\n      //             // var v = document.getElementById(\"myTable\");\n      //             // v.className += \" test\";\n      //             // var r = document.getElementById(\"myTable\");\n      //             // r.className +=  \" testRemove\";\n      //           } else {\n      //             // tr[i].style.display = \"none\";\n      //             var v = document.getElementById(\"myTable\");\n      //             v.className += \" test1\";\n      //             // var r = document.getElementById(\"myTable\");\n      //             // r.className +=  \" testRemove2\";\n      //           }\n      //           // console.log(\"ALL NOTE\" , note);\n      //           return note;\n      //         }       \n      // } \n\n    });\n    setNotes(updatedNotesBySearch); // notes.filter(note =>{\n    //   return note.title.includes(searchNote);\n    // });\n  }; // const searchFilter =(searchNote) =>{\n  //   const updatedNotesBySearch = notes.map((note) => {\n  //   var input, filter, table, tr, td, i, txtValue;\n  //       input = document.getElementById(\"search-form\");\n  //       filter = input.value.toUpperCase();\n  //       table = document.getElementById(\"myTable\");\n  //       tr = table.getElementsByTagName(\"strong\");\n  //       for (i = 0; i < tr.length; i++) {\n  //         if (tr) {\n  //           txtValue = input.value;\n  //           console.log(\"mrena ifit\")\n  //           console.log(txtValue);\n  //           if (txtValue === note.title) {\n  //             // txtValue.toUpperCase().indexOf(filter) > -1\n  //             // $(this).find(‘.screen_name’).text().toLowerCase().indexOf(value) > -1\n  //             console.log(\"mrena kushtit\");\n  //             console.log(\"POOO ::::\" ,note.title)\n  //             // var v = document.getElementById(\"myTable\");\n  //             // v.className += \" test\";\n  //             // var r = document.getElementById(\"myTable\");\n  //             // r.className +=  \" testRemove\";\n  //             // console.log(\"Search NOTE:\" ,searchNote);\n  //             //  return updatedNotesBySearch;\n  //           } else if(txtValue == \"\") {\n  //             // tr[i].style.display = \"none\";\n  //             // var v = document.getElementById(\"myTable\");\n  //             // v.className += \" test1\";\n  //             // var r = document.getElementById(\"myTable\");\n  //             // r.className +=  \" testRemove2\";\n  //             console.log(\"su gjend\");\n  //           }\n  //           // console.log(\"ALL NOTE\" , note);\n  //            return notes;\n  //         }       \n  // } \n  //   });setNotes(updatedNotesBySearch);\n  // }\n\n\n  const onUpdateNote = updatedNote => {\n    const updatedNotesArr = notes.map(note => {\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return id === activeNote;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      notes: notes,\n      onAddNote: onAddNote,\n      onDeleteNote: onDeleteNote,\n      activeNote: activeNote,\n      setActiveNote: setActiveNote,\n      searchFilter: searchFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Note, {\n      activeNote: getActiveNote(),\n      onUpdateNote: onUpdateNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lYbwunTc6vlh1N8X9eZy8GMfiNY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Liridon/Desktop/notebookapp/src/App.js"],"names":["useEffect","useState","uuid","Note","Sidebar","App","notes","setNotes","localStorage","JSON","parse","activeNote","setActiveNote","setItem","stringify","onAddNote","newNote","id","title","category","body","lastModified","Date","now","onDeleteNote","noteId","filter","searchFilter","searchNote","updatedNotesBySearch","map","note","console","log","input","ul","li","a","i","txtValue","document","getElementById","value","toUpperCase","getElementsByTagName","length","style","display","onUpdateNote","updatedNote","updatedNotesArr","getActiveNote","find"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./App.css\";\nimport Note from \"./inputNote/inputNote\";\nimport Sidebar from \"./sidebar/sidebar\";\n\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\", \n      category:\"\",\n      body: \"\",\n      lastModified: Date.now(),\n     \n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    setNotes(notes.filter(({ id }) => id !== noteId));\n  };\n\n\n\n  const searchFilter =(searchNote) =>{\n\n    const updatedNotesBySearch = notes.map((note) => {\n console.log(\"test123\")\n          var input, filter, ul, li, a, i, txtValue;\n          input = document.getElementById('search-form');\n          filter = input.value.toUpperCase();\n          ul = document.getElementById(\"myTable\");\n          li = ul.getElementsByTagName('strong');\n\n          // Loop through all list items, and hide those who don't match the search query\n          for (i = 0; i < li.length; i++) {\n            a = li[i].getElementsByTagName(\"a\")[0];\n            txtValue = a;\n            if ( txtValue === a) {\n              li[i].style.display = \"\";\n            } else {\n              li[i].style.display = \"none\";\n            }\n          }\n  //   var input, filter, table, tr, td, i, txtValue;\n  //       input = document.getElementById(\"search-form\");\n  //       filter = input.value.toUpperCase();\n  //       table = document.getElementById(\"myTable\");\n  //       tr = table.getElementsByTagName(\"strong\");\n  //       for (i = 0; i < tr.length; i++) {\n  //        console.log(tr)\n  //         if (tr) {\n  //           // input#search-form.search-input\n  //           txtValue = input.value;\n  //           console.log(\"mrena ifit\")\n  //           console.log(\"TXT VALUE -  :\" + txtValue);\n  //           if ( txtValue.toUpperCase().indexOf(filter) > -1) {\n              \n  //             // txtValue.toUpperCase().indexOf(filter) > -1\n  //             // $(this).find(‘.screen_name’).text().toLowerCase().indexOf(value) > -1\n  //             console.log(\"mrena kushtit\");\n  //             // var v = document.getElementById(\"myTable\");\n  //             // v.className += \" test\";\n  //             // var r = document.getElementById(\"myTable\");\n  //             // r.className +=  \" testRemove\";\n             \n             \n              \n              \n  //           } else {\n  //             // tr[i].style.display = \"none\";\n  //             var v = document.getElementById(\"myTable\");\n  //             v.className += \" test1\";\n  //             // var r = document.getElementById(\"myTable\");\n  //             // r.className +=  \" testRemove2\";\n  //           }\n  //           // console.log(\"ALL NOTE\" , note);\n  //           return note;\n            \n  //         }       \n  // } \n\n    });setNotes(updatedNotesBySearch);\n   \n\n    // notes.filter(note =>{\n    //   return note.title.includes(searchNote);\n    // });\n  }\n  // const searchFilter =(searchNote) =>{\n  \n\n  //   const updatedNotesBySearch = notes.map((note) => {\n\n  //   var input, filter, table, tr, td, i, txtValue;\n    \n  //       input = document.getElementById(\"search-form\");\n  //       filter = input.value.toUpperCase();\n  //       table = document.getElementById(\"myTable\");\n  //       tr = table.getElementsByTagName(\"strong\");\n  //       for (i = 0; i < tr.length; i++) {\n         \n  //         if (tr) {\n  //           txtValue = input.value;\n  //           console.log(\"mrena ifit\")\n  //           console.log(txtValue);\n            \n  //           if (txtValue === note.title) {\n              \n  //             // txtValue.toUpperCase().indexOf(filter) > -1\n  //             // $(this).find(‘.screen_name’).text().toLowerCase().indexOf(value) > -1\n  //             console.log(\"mrena kushtit\");\n  //             console.log(\"POOO ::::\" ,note.title)\n  //             // var v = document.getElementById(\"myTable\");\n  //             // v.className += \" test\";\n  //             // var r = document.getElementById(\"myTable\");\n  //             // r.className +=  \" testRemove\";\n             \n  //             // console.log(\"Search NOTE:\" ,searchNote);\n  //             //  return updatedNotesBySearch;\n\n              \n              \n  //           } else if(txtValue == \"\") {\n  //             // tr[i].style.display = \"none\";\n  //             // var v = document.getElementById(\"myTable\");\n  //             // v.className += \" test1\";\n  //             // var r = document.getElementById(\"myTable\");\n  //             // r.className +=  \" testRemove2\";\n  //             console.log(\"su gjend\");\n  //           }\n  //           // console.log(\"ALL NOTE\" , note);\n  //            return notes;\n            \n  //         }       \n  // } \n\n  //   });setNotes(updatedNotesBySearch);\n   \n\n  \n  // }\n\n  const onUpdateNote = (updatedNote) => {\n\n    const updatedNotesArr = notes.map((note) => {\n      \n\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(({ id }) => id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n        searchFilter={searchFilter}\n      \n        \n\n      />\n      <Note activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}